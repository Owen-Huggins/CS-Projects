# Object Modeling Example Code

from __future__ import division
import traceback

time = 0   # time is used to move objects from one frame to another

def setup():
    size (800, 800, P3D)
    try:
        frameRate(120)       # this seems to be needed to make sure the scene draws properly
        perspective (60 * PI / 180, 1, 0.1, 1000)  # 60-degree field of view
    except Exception:
        traceback.print_exc()

def draw():
    try:
        global time
        time += 0.01

        camera (0, 0, 100, 0, 0, 0, 0,  1, 0)  # position of the virtual camera

        background (200, 200, 255)  # clear screen and set background to light blue
        
        # set up the lights
        ambientLight(50, 50, 50);
        lightSpecular(255, 255, 255)
        directionalLight (100, 100, 100, -0.3, 0.5, -1)
        
        # set some of the surface properties
        noStroke()
        
        
        
        
        def Mario(): 
       
            # Mario's Face 
            fill (255, 217, 135)
            pushMatrix()
        # translate (0, 8 * sin(4 * time), 0)  # move up and down
            scale(2, 2.3, 2) 
            translate(0, 0, -5)
            sphereDetail(60)  # this controls how many polygons make up each sphere
            sphere(15)
            popMatrix()
            
            #Eyes 
            fill(255, 255, 255) 
            pushMatrix() 
            translate (-7, -6, 10)
            scale(.8, 1, 1)
            sphereDetail(60) 
            sphere(10) 
            popMatrix() 
            
            fill(255, 255, 255) 
            pushMatrix() 
            translate (7, -6, 10)
            scale(.8, 1, 1)
            sphereDetail(60) 
            sphere(10) 
            popMatrix() 
            
            #Color of Eyes 
            fill(0, 1, 252) 
            pushMatrix() 
            translate (-7, -6, 15)
            scale(.8, 1, 1)
            sphereDetail(60) 
            sphere(6) 
            popMatrix()
            
            fill(0, 1, 252) 
            pushMatrix() 
            translate (7, -6, 15)
            scale(.8, 1, 1)
            sphereDetail(60) 
            sphere(6) 
            popMatrix()
            
            #Iris 
            fill(0, 0, 0) 
            pushMatrix() 
            translate (-7, -8, 15.5)
            scale(.8, 1, 1)
            sphereDetail(60) 
            sphere(3) 
            popMatrix()
            
            fill(0, 0, 0) 
            pushMatrix() 
            translate (7, -8, 15.5)
            scale(.8, 1, 1)
            sphereDetail(60) 
            sphere(3) 
            popMatrix()
            
            
            
            #Nose 
            fill (255, 217, 135)
            pushMatrix()
            scale(1.8, 1.3, 1.5) 
            translate(0, 3, 17) 
            sphereDetail(60)  # this controls how many polygons make up each sphere
            sphere(7)
            popMatrix()
            
            #Ears 
            fill (255, 217, 135)
            pushMatrix()
            scale(2.7, 2, 1) 
            translate(-9, 1, -1)   
            sphereDetail(60)  # this controls how many polygons make up each sphere
            sphere(6)
            popMatrix()
            
            fill (255, 217, 135)
            pushMatrix()
            scale(2.7, 2, 1) 
            translate(9, 1, -1) 
            sphereDetail(60)  # this controls how many polygons make up each sphere
            sphere(6)
            popMatrix()
            
            
            #Hat 
            fill(254, 0, 2) 
            pushMatrix()
            translate(0, -18, 1) 
            box(45, 5, 40)
            popMatrix()
            
            pushMatrix() 
            translate(0, -18, -10)
            scale(1.5, 1.2, 1.5)
            sphereDetail(60)  # this controls how many polygons make up each sphere
            sphere(18)
            popMatrix() 
            
            
            fill(255, 255, 255) 
            pushMatrix() 
            translate(0, -23, 4) 
            
            sphereDetail(60)  # this controls how many polygons make up each sphere
            sphere(12)
            popMatrix() 
            
        
        
        
        pushMatrix()
        
        rotateY(time)
        Mario()
        
        popMatrix()
       

   
    except Exception:
        traceback.print_exc()
        
        
        
    # cylinder with radius = 1, z range in [-1,1]
def cylinder(sides = 50):
    # first endcap
    beginShape()
    for i in range(sides):
        theta = i * 2 * PI / sides
        x = cos(theta)
        y = sin(theta)
        vertex ( x,  y, -1)
    endShape(CLOSE)
    # second endcap
    beginShape()
    for i in range(sides):
        theta = i * 2 * PI / sides
        x = cos(theta)
        y = sin(theta)
        vertex ( x,  y, 1)
    endShape(CLOSE)
    # round main body
    x1 = 1
    y1 = 0
    for i in range(sides):
        theta = (i + 1) * 2 * PI / sides
        x2 = cos(theta)
        y2 = sin(theta)
        beginShape()
        normal (x1, y1, 0)
        vertex (x1, y1, 1)
        vertex (x1, y1, -1)
        normal (x2, y2, 0)
        vertex (x2, y2, -1)
        vertex (x2, y2, 1)
        endShape(CLOSE)
        x1 = x2
        y1 = y2
